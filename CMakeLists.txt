# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.16)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)

# Variables
set(CMAKE_MODULE_PATH cmake)

project(Mergen)

# Packages
find_package(LLVM REQUIRED)
include_directories(${LLVM_INCLUDE_DIRS})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
set(CMAKE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS}")

# Subdirectory: linux-pe
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/linux-pe")
else()
	set(CMAKE_FOLDER linux-pe)
endif()
add_subdirectory(linux-pe)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target: Zydis
set(Zydis_SOURCES
	"Zydis-4.1.0/Zydis/Zydis.c"
	"Zydis-4.1.0/Zydis/Zydis.h"
	cmake.toml
)

add_library(Zydis STATIC)

target_sources(Zydis PRIVATE ${Zydis_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${Zydis_SOURCES})

add_library(Zydis::Zydis ALIAS Zydis)
target_compile_definitions(Zydis PUBLIC
	ZYCORE_STATIC_BUILD
	ZYDIS_STATIC_BUILD
)

target_include_directories(Zydis PUBLIC
	Zydis-4.1.0
)

target_include_directories(Zydis PRIVATE
	"Zydis-4.1.0/Zydis"
)

# Target: lifter
set(lifter_SOURCES
	"lifter/CustomPasses.hpp"
	"lifter/GEPTracker.cpp"
	"lifter/LLVM-init.cpp"
	"lifter/OperandUtils.cpp"
	"lifter/PathSolver.cpp"
	"lifter/Semantics.cpp"
	"lifter/lifter.cpp"
	"lifter/utils.cpp"
	"lifter/GEPTracker.h"
	"lifter/LLVM-init.h"
	"lifter/OperandUtils.h"
	"lifter/PathSolver.h"
	"lifter/Semantics.h"
	"lifter/includes.h"
	"lifter/utils.h"
	cmake.toml
)

add_executable(lifter)

target_sources(lifter PRIVATE ${lifter_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${lifter_SOURCES})

target_compile_features(lifter PRIVATE
	cxx_std_20
)

target_link_libraries(lifter PRIVATE
	Zydis::Zydis
	LLVM
	linux-pe
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT lifter)
endif()
